version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: trial-db
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  auth:
    build: ./api/auth
    container_name: trial-auth
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${AUTH_PORT}:8001"
    env_file:
      - .env
    environment:
      DB_HOST: db
      JWT_SECRET: ${JWT_SECRET_AUTH}
    command: sh -c "sleep 20 && ./main"

  course:
    build: ./api/course
    container_name: trial-course
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${COURSE_PORT}:8081"
    env_file:
      - .env
    environment:
      DB_HOST: db
      JWT_SECRET: ${JWT_SECRET_COURSE}
    command: sh -c "sleep 20 && ./course-service"

  operational:
    build: ./api/operational
    container_name: trial-operational
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${OPERATIONAL_PORT}:8010"
    env_file:
      - .env
    environment:
      DB_HOST: db
      JWT_SECRET: ${JWT_SECRET_OPERATIONAL}
    command: sh -c "sleep 20 && ./main"

  frontend:
    build: ./app
    container_name: trial-frontend
    restart: always
    depends_on:
      - auth
      - course
      - operational
    ports:
      - "${FRONTEND_PORT}:8004"
    env_file:
      - .env
    environment:
      VITE_API_URL: ${VITE_API_URL}
    command: ["npm", "run", "dev", "--", "--port", "${FRONTEND_PORT}"]

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: trial-phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "8011:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

volumes:
  db_data:
